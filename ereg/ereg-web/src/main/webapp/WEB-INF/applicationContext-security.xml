<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
    xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
    	http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    	http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context-3.1.xsd
    	http://www.springframework.org/schema/security
    	http://www.springframework.org/schema/security/spring-security-3.1.xsd
    	http://www.springframework.org/schema/util
    	http://www.springframework.org/schema/util/spring-util-3.1.xsd">

    <context:component-scan base-package="org.broadleafcommerce.common.web.security"/>
    <context:component-scan base-package="org.broadleafcommerce.profile.web.core.security"/>
    <context:component-scan base-package="org.broadleafcommerce.core.web.order.security"/>
    <!-- Temporary fix, needs to be deleted later -->
    <context:component-scan base-package="org.broadleafcommerce.openadmin.server.security" />
     <context:component-scan base-package="org.ets.ereg.web.filter" />
     <context:component-scan base-package="org.ets.ereg.web.filter" />
     <context:component-scan base-package="org.ets.ereg.web.security" />

    <bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />

    <!-- Resources do not need security -->
	<sec:http pattern="/css/**" security="none" />
	<sec:http pattern="/fonts/**" security="none" />
	<sec:http pattern="/img/**" security="none" />
	<sec:http pattern="/js/**" security="none" />
	<sec:http pattern="/favicon.ico" security="none" />
	<sec:http pattern="/robots.txt" security="none" />	
	<sec:http pattern="/resources/**" security="none" />
	<sec:http pattern="/commonweb/css/**" security="none" />
    <sec:http pattern="/commonweb/fonts/**" security="none" />
    <sec:http pattern="/commonweb/img/**" security="none" />
    <sec:http pattern="/commonweb/js/**" security="none" />
    <sec:http pattern="/commonweb/jsp/*" security="none" />


	
	

	<!-- Set up Spring security for the application -->
	<sec:http auto-config="false" authentication-manager-ref="blAuthenticationManager" >
		<!-- We handle session fixation protection ourselves  -->
	     <sec:session-management session-fixation-protection="none" />

	    <!-- Wishlist modifications live under /account, but we don't need HTTPS -->
		<!-- <sec:intercept-url pattern="/account/wishlist/**" access="ROLE_CUSTOMER" requires-channel="any" />-->

		<!-- Specify these URLs as requiring HTTPS to encrypt user data  -->
		<!-- <sec:intercept-url pattern="/register*" requires-channel="https" />
		<sec:intercept-url pattern="/login*/**" requires-channel="https" />
		<sec:intercept-url pattern="/account/**" access="ROLE_CUSTOMER" requires-channel="https" />
		<sec:intercept-url pattern="/checkout/**" requires-channel="https" />
		<sec:intercept-url pattern="/confirmation/**" requires-channel="https" />-->

		<!-- Since the cart page is viewing as a modal, we want to allow it on any page -->
		<!-- <sec:intercept-url pattern="/cart/**" requires-channel="any" />-->

		<!-- All URLs not explicitly specified as https will be served under http -->
      <!--   <sec:intercept-url pattern="/" requires-channel="http"/>
        <sec:intercept-url pattern="/**" requires-channel="http"/>-->

        <!--  <sec:intercept-url pattern="/secure/**" access="isAuthenticated()" />-->
           <sec:intercept-url pattern="/secure/**" access="ROLE_CUSTOMER,ROLE_ADMIN"/>


		<!-- Define the login form along with the success and failure handlers '/signin?error=true' login-processing-url="/login_post.htm" -->
	 <sec:form-login login-page='/public/signin' authentication-failure-url="/public/signin?error=true"
			authentication-success-handler-ref="etsAuthenticationSuccessHandler"
			authentication-failure-handler-ref="blAuthenticationFailureHandler"
		/>





	<!-- 	<sec:form-login login-page="/signin" default-target-url="/secure/home"
			authentication-failure-url="/loginfailed" />-->




		<!-- Provide the logout handler -->
		<sec:logout delete-cookies="ActiveID"  invalidate-session="true"  logout-url="/public/logout" success-handler-ref ="etsLogout"/>

		<!-- Specify our custom filters -->
		<!--
		<sec:custom-filter ref="blCsrfFilter" before="FORM_LOGIN_FILTER"/>
		-->
		 <sec:remember-me/>
		 <sec:custom-filter ref="auditFilter " after="LAST"/>
		<sec:custom-filter ref="OAMPreAuthFilter" position="PRE_AUTH_FILTER" />
		<sec:custom-filter ref="eRegCustStateFilter" after="REMEMBER_ME_FILTER"/>
		<sec:custom-filter ref="blCartStateFilter" before="ANONYMOUS_FILTER"/>
		<sec:custom-filter ref="blSessionFixationProtectionFilter" before="SESSION_MANAGEMENT_FILTER"/>
	</sec:http>

	<!--  The ETS Authentication manager.   -->
	<sec:authentication-manager alias="blAuthenticationManager">
		<sec:authentication-provider ref="OAMPreAuthProvider"/>
		<sec:authentication-provider user-service-ref="blUserDetailsService">
			<sec:password-encoder ref="blPasswordEncoder" />
		</sec:authentication-provider>
	</sec:authentication-manager>

	<bean id="blUserDetailsService" class="org.ets.ereg.common.user.details.service.impl.CustomerERegUserDetailsDBServiceImpl"/>
	<bean id="etsLogout" class="org.ets.ereg.web.security.ETSCustomerLogoutSuccessHandler"/>
	<bean id="customerPreAuthUserDetailsService" class="org.ets.ereg.common.user.details.service.impl.CustomerERegUserDetailsOAMPreAuthServiceImpl"/>

	<bean id="OAMPreAuthFilter" class="org.ets.ereg.web.security.ETSCustomerRequestHeaderAuthenticationFilter">
		<property name="authenticationManager" ref="blAuthenticationManager"/>
		<property name="principalRequestHeader" value="EIASUSERNAME"/>
		<property name="exceptionIfHeaderMissing" value="false"/>
		<property name="continueFilterChainOnUnsuccessfulAuthentication" value="true"/>
	</bean>

	<bean id="OAMPreAuthProvider" class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
	    <property name="preAuthenticatedUserDetailsService" ref="customerPreAuthUserDetailsService"/>
    </bean>

    <bean id="blCsrfFilter" class="org.broadleafcommerce.common.security.handler.CsrfFilter">
        <property name="excludedRequestPatterns">
            <list>
                <value>/api/**</value>
            </list>
        </property>
    </bean>

    <!-- Sets the login failure URL -->
	<bean id="blAuthenticationFailureHandler" class="org.broadleafcommerce.common.security.BroadleafAuthenticationFailureHandler">
		<constructor-arg value="/public/signin?error=true" />
		<property name="redirectStrategy" ref="blAuthenticationFailureRedirectStrategy" />
	</bean>



    <!-- Sets the login success URL -->
	<bean id="etsAuthenticationSuccessHandler" class="org.ets.ereg.web.security.ETSCustomerAuthenticationSuccessHandler">
		<property name="redirectStrategy" ref="blAuthenticationSuccessRedirectStrategy" />
		<property name="defaultTargetUrl" value="/secure/home" />
		<property name="targetUrlParameter" value="successUrl" />
		<property name="alwaysUseDefaultTargetUrl" value="false" />
	</bean>

</beans>