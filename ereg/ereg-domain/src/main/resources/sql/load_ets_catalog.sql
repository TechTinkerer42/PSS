--First line needs to be uncommented to run in oracle directly
--SET SCAN OFF;

-- BLC Admin Required Categories
INSERT INTO BLC_CATEGORY (CATEGORY_ID,DESCRIPTION,NAME,URL,DEFAULT_PARENT_CATEGORY_ID,ACTIVE_START_DATE) VALUES (1,'Root','Root',NULL,NULL,CURRENT_TIMESTAMP);
INSERT INTO BLC_CATEGORY (CATEGORY_ID,DESCRIPTION,NAME,URL,DEFAULT_PARENT_CATEGORY_ID,ACTIVE_START_DATE) VALUES (2, 'Primary Nav','Primary Nav',NULL,1,CURRENT_TIMESTAMP);

-- ETS Non-Sellable Category
INSERT INTO BLC_CATEGORY (CATEGORY_ID,DESCRIPTION,NAME,URL,DEFAULT_PARENT_CATEGORY_ID,ACTIVE_START_DATE) VALUES (100,'Non-Sellable','Non-Sellable',NULL,1,CURRENT_TIMESTAMP);

-- Custom store navigation (default template uses these for the header navigation)
INSERT INTO BLC_CATEGORY (CATEGORY_ID,DESCRIPTION,NAME,URL,DEFAULT_PARENT_CATEGORY_ID,ACTIVE_START_DATE, DISPLAY_TEMPLATE) VALUES (2001,'Home','Home','/',2,CURRENT_TIMESTAMP, 'layout/home');
INSERT INTO BLC_CATEGORY (CATEGORY_ID,DESCRIPTION,NAME,URL,DEFAULT_PARENT_CATEGORY_ID,ACTIVE_START_DATE) VALUES (2002,'HSE','High School Equivalency Test','/hset',2,CURRENT_TIMESTAMP);

-- Builds the category hierarchy (simple in this case) - Root --> Nav --> All other categories
INSERT INTO BLC_CATEGORY_XREF (SUB_CATEGORY_ID, CATEGORY_ID, DISPLAY_ORDER) VALUES (2,1,1);
INSERT INTO BLC_CATEGORY_XREF (SUB_CATEGORY_ID, CATEGORY_ID, DISPLAY_ORDER) VALUES (100,1,1);
INSERT INTO BLC_CATEGORY_XREF (SUB_CATEGORY_ID, CATEGORY_ID, DISPLAY_ORDER) VALUES (2001,2,1);
INSERT INTO BLC_CATEGORY_XREF (SUB_CATEGORY_ID, CATEGORY_ID, DISPLAY_ORDER) VALUES (2002,2,2);

------------------------------------------------------------------------------------------------------------------
-- Inserting products manually involves five steps which are outlined below.   Typically, products are loaded
-- up front in the project and then managed via the Broadleaf Commerce admin.
--
-- Loading through this script is a convenient way to get started when prototyping and can be useful in development
-- as a way to share data-setup without requiring a shared DB connection.
------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------
-- Load Catalog - Step 1:  Create the products
-- =============================================
------------------------------------------------------------------------------------------------------------------
-- Create the 5 HiSet Products
INSERT INTO BLC_PRODUCT (PRODUCT_ID, DEFAULT_CATEGORY_ID, IS_FEATURED_PRODUCT) VALUES (1,2002,0);
INSERT INTO BLC_PRODUCT (PRODUCT_ID, DEFAULT_CATEGORY_ID, IS_FEATURED_PRODUCT) VALUES (2,2002,0);
INSERT INTO BLC_PRODUCT (PRODUCT_ID, DEFAULT_CATEGORY_ID, IS_FEATURED_PRODUCT) VALUES (3,2002,0);
INSERT INTO BLC_PRODUCT (PRODUCT_ID, DEFAULT_CATEGORY_ID, IS_FEATURED_PRODUCT) VALUES (4,2002,0);
INSERT INTO BLC_PRODUCT (PRODUCT_ID, DEFAULT_CATEGORY_ID, IS_FEATURED_PRODUCT) VALUES (5,2002,0);

INSERT INTO ETS_PROD (PRODUCT_ID) VALUES (1);
INSERT INTO ETS_PROD (PRODUCT_ID) VALUES (2);
INSERT INTO ETS_PROD (PRODUCT_ID) VALUES (3);
INSERT INTO ETS_PROD (PRODUCT_ID) VALUES (4);
INSERT INTO ETS_PROD (PRODUCT_ID) VALUES (5);

-- Create the Membership Fee products
INSERT INTO BLC_PRODUCT (PRODUCT_ID, DEFAULT_CATEGORY_ID, IS_FEATURED_PRODUCT) VALUES (6,100,0);
INSERT INTO BLC_PRODUCT (PRODUCT_ID, DEFAULT_CATEGORY_ID, IS_FEATURED_PRODUCT) VALUES (7,100,0);

INSERT INTO ETS_PROD (PRODUCT_ID) VALUES (6);
INSERT INTO ETS_PROD (PRODUCT_ID) VALUES (7);

-- Create the Battery Subscription product
INSERT INTO BLC_PRODUCT (PRODUCT_ID, DEFAULT_CATEGORY_ID, IS_FEATURED_PRODUCT) VALUES (8,100,0);

INSERT INTO ETS_PROD (PRODUCT_ID) VALUES (8);

INSERT INTO BTTRY_PROD (PRODUCT_ID, DURN_MONTHS, TOT_TAKES_NO) VALUES (8, 12, 3);

-- associate the eligible products in the Battery Subscription (in this case, the HiSet tests)
INSERT INTO BTTRY_PROD_ITM (BTTRY_PROD_ITM_ID, BTTRY_PROD_ID, PRODUCT_ID) VALUES (1, 8, 1);
INSERT INTO BTTRY_PROD_ITM (BTTRY_PROD_ITM_ID, BTTRY_PROD_ID, PRODUCT_ID) VALUES (2, 8, 2);
INSERT INTO BTTRY_PROD_ITM (BTTRY_PROD_ITM_ID, BTTRY_PROD_ID, PRODUCT_ID) VALUES (3, 8, 3);
INSERT INTO BTTRY_PROD_ITM (BTTRY_PROD_ITM_ID, BTTRY_PROD_ID, PRODUCT_ID) VALUES (4, 8, 4);
INSERT INTO BTTRY_PROD_ITM (BTTRY_PROD_ITM_ID, BTTRY_PROD_ID, PRODUCT_ID) VALUES (5, 8, 5);

-- Create the HiSet Reschedule Fee product
INSERT INTO BLC_PRODUCT (PRODUCT_ID, DEFAULT_CATEGORY_ID, IS_FEATURED_PRODUCT) VALUES (9,100,0);
INSERT INTO ETS_PROD (PRODUCT_ID) VALUES (9);

------------------------------------------------------------------------------------------------------------------
-- Load Catalog - Step 2:  Create SKUs
-- =============================================
-- The Broadleaf Commerce product model is setup such that every product has a default SKU.   For many products,
-- a product only has one SKU.    SKUs hold the pricing information for the product and are the actual entity
-- that is added to the cart.    Inventory, Pricing, and Fulfillment concerns are done at the SKU level

INSERT INTO BLC_SKU (SKU_ID,DEFAULT_PRODUCT_ID,NAME,LONG_DESCRIPTION,RETAIL_PRICE,TAXABLE_FLAG,DISCOUNTABLE_FLAG,ACTIVE_START_DATE,FULFILLMENT_TYPE) VALUES (600,6,'One Time Membership Fee','One Time Membership Fee',50.00,'Y','Y',CURRENT_TIMESTAMP,'MEMBERSHIP_FEE');
INSERT INTO BLC_SKU (SKU_ID,DEFAULT_PRODUCT_ID,NAME,LONG_DESCRIPTION,RETAIL_PRICE,TAXABLE_FLAG,DISCOUNTABLE_FLAG,ACTIVE_START_DATE,FULFILLMENT_TYPE) VALUES (700,7,'Yearly Membership Fee','Yearly Membership Fee',20.00,'Y','Y',CURRENT_TIMESTAMP,'MEMBERSHIP_FEE');

-- For now, adding Duration In Months to the Yearly Membership SKU
INSERT INTO BLC_SKU_ATTRIBUTE (SKU_ATTR_ID, NAME, VALUE, SKU_ID) VALUES (700, 'DURATION_IN_MONTHS', '12', 700);
-- Also adding start month (for HiSet it is a calendar year, so starts in January)
INSERT INTO BLC_SKU_ATTRIBUTE (SKU_ATTR_ID, NAME, VALUE, SKU_ID) VALUES (701, 'START_MONTH', '1', 700);

INSERT INTO ETS_SKU (SKU_ID) VALUES (600);
INSERT INTO ETS_SKU (SKU_ID) VALUES (700);

-- Insert Battery Subscription SKU
INSERT INTO BLC_SKU (SKU_ID,DEFAULT_PRODUCT_ID,NAME,LONG_DESCRIPTION,RETAIL_PRICE,TAXABLE_FLAG,DISCOUNTABLE_FLAG,ACTIVE_START_DATE,FULFILLMENT_TYPE) VALUES (800,8,'Battery Subscription','Battery Subscription',50.00,'Y','Y',CURRENT_TIMESTAMP,'BATTERY_SUBSCRIPTION');
INSERT INTO ETS_SKU (SKU_ID) VALUES (800);

-- Insert the HiSet Reschedule Fee SKU
INSERT INTO BLC_SKU (SKU_ID,DEFAULT_PRODUCT_ID,NAME,LONG_DESCRIPTION,RETAIL_PRICE,TAXABLE_FLAG,DISCOUNTABLE_FLAG,ACTIVE_START_DATE,FULFILLMENT_TYPE) VALUES (900,9,'HiSet Reschedule Fee','HiSet Reschedule Fee',5.00,'Y','Y',CURRENT_TIMESTAMP,'RESCHEDULE_FEE');
INSERT INTO ETS_SKU (SKU_ID) VALUES (800);

-- Some SKUs may be product options based on one product. For example, the
-- HiSet products have the different SKU permutations of these options
-- Paper/Computer
------------------------------------------------------------------------------------------------------------------
INSERT INTO BLC_PRODUCT_OPTION (PRODUCT_OPTION_ID, OPTION_TYPE, ATTRIBUTE_NAME, LABEL, REQUIRED) VALUES (1, 'TEST_TYPE', 'TEST_TYPE', 'Test Type', 1);

INSERT INTO BLC_PRODUCT_OPTION_VALUE (PRODUCT_OPTION_VALUE_ID, ATTRIBUTE_VALUE, DISPLAY_ORDER, PRODUCT_OPTION_ID) VALUES (1, 'Paper', 1, 1);
INSERT INTO BLC_PRODUCT_OPTION_VALUE (PRODUCT_OPTION_VALUE_ID, ATTRIBUTE_VALUE, DISPLAY_ORDER, PRODUCT_OPTION_ID) VALUES (2, 'Computer', 2, 1);

-- For HiSET: the default price of the SKU is set to 0.
-- the prices will be determined by agency and will be handled by Price Lists
-- These are the default SKUs for the Test products.
--  The system does not allow you to add these SKUs to the cart since product.getAdditionalSkus() is non-empty and
--  the default product for these SKUs have the attribute canSellWithoutOptions = FALSE.
------------------------------------------------------------------------------------------------------------------
INSERT INTO BLC_SKU (SKU_ID,DEFAULT_PRODUCT_ID,NAME,LONG_DESCRIPTION,RETAIL_PRICE,TAXABLE_FLAG,DISCOUNTABLE_FLAG,ACTIVE_START_DATE,FULFILLMENT_TYPE) VALUES (100,1,'ELA-Reading','HSET ELA-Reading',15,'Y','Y',CURRENT_TIMESTAMP,'TEST');
INSERT INTO BLC_SKU (SKU_ID,DEFAULT_PRODUCT_ID,NAME,LONG_DESCRIPTION,RETAIL_PRICE,TAXABLE_FLAG,DISCOUNTABLE_FLAG,ACTIVE_START_DATE,FULFILLMENT_TYPE) VALUES (200,2,'ELA-Writing','HSET ELA-Writing',15,'Y','Y',CURRENT_TIMESTAMP,'TEST');
INSERT INTO BLC_SKU (SKU_ID,DEFAULT_PRODUCT_ID,NAME,LONG_DESCRIPTION,RETAIL_PRICE,TAXABLE_FLAG,DISCOUNTABLE_FLAG,ACTIVE_START_DATE,FULFILLMENT_TYPE) VALUES (300,3,'Social Studies','HSET Social Studies',15,'Y','Y',CURRENT_TIMESTAMP,'TEST');
INSERT INTO BLC_SKU (SKU_ID,DEFAULT_PRODUCT_ID,NAME,LONG_DESCRIPTION,RETAIL_PRICE,TAXABLE_FLAG,DISCOUNTABLE_FLAG,ACTIVE_START_DATE,FULFILLMENT_TYPE) VALUES (400,4,'Science','HSET Science',15,'Y','Y',CURRENT_TIMESTAMP,'TEST');
INSERT INTO BLC_SKU (SKU_ID,DEFAULT_PRODUCT_ID,NAME,LONG_DESCRIPTION,RETAIL_PRICE,TAXABLE_FLAG,DISCOUNTABLE_FLAG,ACTIVE_START_DATE,FULFILLMENT_TYPE) VALUES (500,5,'Mathematics','HSET Mathematics',15,'Y','Y',CURRENT_TIMESTAMP,'TEST');

-- ETS Extension to BLC_SKU
INSERT INTO ETS_SKU (SKU_ID) VALUES (100);
INSERT INTO ETS_SKU (SKU_ID) VALUES (200);
INSERT INTO ETS_SKU (SKU_ID) VALUES (300);
INSERT INTO ETS_SKU (SKU_ID) VALUES (400);
INSERT INTO ETS_SKU (SKU_ID) VALUES (500);

------------------------------------------------------------------------------------------------------------------
-- Create additional SKUs for the tests. In this case, we're stating that all Paper Based products are $1.00
-- All other combinations have no special properties, but we must create them so we can track inventory on a
-- per-SKU level. Generally, either you have only a default SKU or SKUs for all permutations of product options
-- If the price isn't specified on an additional SKU, the System will look at the default SKU.
------------------------------------------------------------------------------------------------------------------
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (111,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (112,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (113,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (114,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (211,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (212,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (213,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (214,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (311,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (312,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (313,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (314,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (411,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (412,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (413,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (414,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (511,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (512,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (513,'Y','TEST');
INSERT INTO BLC_SKU (SKU_ID,DISCOUNTABLE_FLAG,FULFILLMENT_TYPE) VALUES (514,'Y','TEST');


-- ETS Extension to BLC_SKU
INSERT INTO ETS_SKU (SKU_ID) VALUES (111);
INSERT INTO ETS_SKU (SKU_ID) VALUES (112);
INSERT INTO ETS_SKU (SKU_ID) VALUES (113);
INSERT INTO ETS_SKU (SKU_ID) VALUES (114);
INSERT INTO ETS_SKU (SKU_ID) VALUES (211);
INSERT INTO ETS_SKU (SKU_ID) VALUES (212);
INSERT INTO ETS_SKU (SKU_ID) VALUES (213);
INSERT INTO ETS_SKU (SKU_ID) VALUES (214);
INSERT INTO ETS_SKU (SKU_ID) VALUES (311);
INSERT INTO ETS_SKU (SKU_ID) VALUES (312);
INSERT INTO ETS_SKU (SKU_ID) VALUES (313);
INSERT INTO ETS_SKU (SKU_ID) VALUES (314);
INSERT INTO ETS_SKU (SKU_ID) VALUES (411);
INSERT INTO ETS_SKU (SKU_ID) VALUES (412);
INSERT INTO ETS_SKU (SKU_ID) VALUES (413);
INSERT INTO ETS_SKU (SKU_ID) VALUES (414);
INSERT INTO ETS_SKU (SKU_ID) VALUES (511);
INSERT INTO ETS_SKU (SKU_ID) VALUES (512);
INSERT INTO ETS_SKU (SKU_ID) VALUES (513);
INSERT INTO ETS_SKU (SKU_ID) VALUES (514);



INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (111,'PBT',1, 'EN');
INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (211,'PBT',2, 'EN');
INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (311,'PBT',3, 'EN');
INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (411,'PBT',4, 'EN');
INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (511,'PBT',5, 'EN');

INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (112,'CBT',1, 'EN');
INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (212,'CBT',2, 'EN');
INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (312,'CBT',3, 'EN');
INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (412,'CBT',4, 'EN');
INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (512,'CBT',5, 'EN');

INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (113,'PBT',1, 'ES');
INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (213,'PBT',2, 'ES');
INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (313,'PBT',3, 'ES');
INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (413,'PBT',4, 'ES');
INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (513,'PBT',5, 'ES');

INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (114,'CBT',1, 'ES');
INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (214,'CBT',2, 'ES');
INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (314,'CBT',3, 'ES');
INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (414,'CBT',4, 'ES');
INSERT INTO TST_SKU (SKU_ID,DLVY_MDE_CDE,TST_ID,LANG_CDE) VALUES (514,'CBT',5, 'ES');

------------------------------------------------------------------------------------------------------------------
-- Associate the appropriate option values for the skus
------------------------------------------------------------------------------------------------------------------
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (111, 1);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (112, 2);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (113, 1);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (114, 2);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (211, 2);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (212, 1);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (213, 2);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (214, 1);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (311, 1);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (312, 2);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (313, 1);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (314, 2);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (411, 2);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (412, 1);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (413, 2);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (414, 1);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (511, 1);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (512, 1);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (513, 1);
INSERT INTO BLC_SKU_OPTION_VALUE_XREF (SKU_ID, PRODUCT_OPTION_VALUE_ID) VALUES (514, 1);



------------------------------------------------------------------------------------------------------------------
-- Link the additional SKUs for HiSet
------------------------------------------------------------------------------------------------------------------
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (111, 1);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (112, 1);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (113, 1);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (114, 1);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (211, 2);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (212, 2);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (213, 2);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (214, 2);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (311, 3);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (312, 3);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (313, 3);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (314, 3);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (411, 4);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (412, 4);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (413, 4);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (414, 4);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (511, 5);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (512, 5);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (513, 5);
INSERT INTO BLC_PRODUCT_SKU_XREF (SKU_ID, PRODUCT_ID) VALUES (514, 5);

------------------------------------------------------------------------------------------------------------------
-- Associate the HiSET products with their appropriate available product options
------------------------------------------------------------------------------------------------------------------
INSERT INTO BLC_PRODUCT_OPTION_XREF (PRODUCT_OPTION_ID, PRODUCT_ID) VALUES (1, 1);
INSERT INTO BLC_PRODUCT_OPTION_XREF (PRODUCT_OPTION_ID, PRODUCT_ID) VALUES (1, 2);
INSERT INTO BLC_PRODUCT_OPTION_XREF (PRODUCT_OPTION_ID, PRODUCT_ID) VALUES (1, 3);
INSERT INTO BLC_PRODUCT_OPTION_XREF (PRODUCT_OPTION_ID, PRODUCT_ID) VALUES (1, 4);
INSERT INTO BLC_PRODUCT_OPTION_XREF (PRODUCT_OPTION_ID, PRODUCT_ID) VALUES (1, 5);

------------------------------------------------------------------------------------------------------------------
-- Load Catalog - Step 3:  Create Category/Product Mapping
-- ========================================================
-- Add all tests to the HSET category
------------------------------------------------------------------------------------------------------------------
INSERT INTO BLC_CATEGORY_PRODUCT_XREF (PRODUCT_ID, CATEGORY_ID, DISPLAY_ORDER) VALUES (1,2002,1);
INSERT INTO BLC_CATEGORY_PRODUCT_XREF (PRODUCT_ID, CATEGORY_ID, DISPLAY_ORDER) VALUES (2,2002,2);
INSERT INTO BLC_CATEGORY_PRODUCT_XREF (PRODUCT_ID, CATEGORY_ID, DISPLAY_ORDER) VALUES (3,2002,3);
INSERT INTO BLC_CATEGORY_PRODUCT_XREF (PRODUCT_ID, CATEGORY_ID, DISPLAY_ORDER) VALUES (4,2002,4);
INSERT INTO BLC_CATEGORY_PRODUCT_XREF (PRODUCT_ID, CATEGORY_ID, DISPLAY_ORDER) VALUES (5,2002,5);

------------------------------------------------------------------------------------------------------------------
-- Load Catalog - Step 4:  Media Items used by products
-- ========================================================
------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------
-- Load Catalog - Step 5:  Mapping for product to media
-- ========================================================
------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------
-- Create Cart Rules
-- ========================================================
------------------------------------------------------------------------------------------------------------------
INSERT INTO CART_RUL (CART_RUL_ID, CART_RUL_NAM, CART_RUL_TYP_CDE, CART_RUL_EXPRSN, CART_RUL_DSC) VALUES (1, 'One Time Membership Fee', 'MBRSP', 'agency.id==10001', 'One Time Membership Fee');
INSERT INTO CART_RUL (CART_RUL_ID, CART_RUL_NAM, CART_RUL_TYP_CDE, CART_RUL_EXPRSN, CART_RUL_DSC) VALUES (2, 'Yearly Membership Fee', 'MBRSP', 'agency.id==47', 'Yearly Membership Fee');
INSERT INTO CART_RUL (CART_RUL_ID, CART_RUL_NAM, CART_RUL_TYP_CDE, CART_RUL_EXPRSN, CART_RUL_DSC) VALUES (3, 'HiSet Reschedule Fee', 'RSCHDL', 'pastEligibleReschedules > 2', 'HiSet Reschedule Fee');


-- Create the Dependent Product
INSERT INTO DEP_PROD (DEP_PROD_ID, PRODUCT_ID, QTY, UNQ_FLG) VALUES (1, 6, 1, 'Y');
INSERT INTO DEP_PROD (DEP_PROD_ID, PRODUCT_ID, QTY, UNQ_FLG) VALUES (2, 7, 1, 'Y');
INSERT INTO DEP_PROD (DEP_PROD_ID, PRODUCT_ID, QTY, UNQ_FLG) VALUES (3, 9, 1, 'Y');


-- Map the Dependent Products to the Cart Rule
INSERT INTO CART_RUL_DEP_PROD (CART_RUL_ID, DEP_PROD_ID) VALUES (1, 1);
INSERT INTO CART_RUL_DEP_PROD (CART_RUL_ID, DEP_PROD_ID) VALUES (2, 2);
INSERT INTO CART_RUL_DEP_PROD (CART_RUL_ID, DEP_PROD_ID) VALUES (3, 3);


-- Map the Cart Rule to the SKU
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (111,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (112,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (113,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (114,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (211,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (212,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (213,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (214,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (311,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (312,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (313,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (314,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (411,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (412,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (413,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (414,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (511,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (512,1);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (111,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (113,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (114,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (112,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (211,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (212,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (213,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (214,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (311,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (312,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (313,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (314,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (411,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (412,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (413,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (414,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (511,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (512,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (513,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (514,2);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (111,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (113,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (114,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (112,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (211,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (212,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (213,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (214,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (311,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (312,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (313,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (314,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (411,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (412,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (413,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (414,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (511,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (512,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (513,3);
INSERT INTO CART_RUL_SKU (SKU_ID, CART_RUL_ID) VALUES (514,3);
------------------------------------------------------------------------------------------------------------------
-- Create BOGO Battery Subscription Offer
-- ========================================================
------------------------------------------------------------------------------------------------------------------
-- TLDR; IF the order contains an order item with the name of "Battery Subscription" THEN
--  apply the discount to those items that
--  are of type "TestDiscreteOrderItem" in Agency X and the order item is Eligible for the Battery in the Cart
--INSERT INTO BLC_OFFER (OFFER_ID,APPLIES_WHEN_RULES,APPLIES_TO_RULES,APPLY_OFFER_TO_MARKED_ITEMS,APPLY_TO_SALE_PRICE,ARCHIVED,COMBINABLE_WITH_OTHER_OFFERS,OFFER_DELIVERY_TYPE,OFFER_DESCRIPTION,OFFER_DISCOUNT_TYPE,END_DATE,MARKETING_MESSASGE,MAX_USES_PER_CUSTOMER,MAX_USES,OFFER_NAME,OFFER_ITEM_QUALIFIER_RULE,OFFER_ITEM_TARGET_RULE,OFFER_PRIORITY,QUALIFYING_ITEM_MIN_TOTAL,STACKABLE,START_DATE,TARGET_SYSTEM,TOTALITARIAN_OFFER,USE_NEW_FORMAT,OFFER_TYPE,USES,OFFER_VALUE) VALUES (100,null,null,0,0,'N',0,'AUTOMATIC',null,'FIX_PRICE',to_date('01-JAN-2030','DD-MON-YYYY'),null,null,0,'Battery Subscription In Cart Offer','NONE','NONE',0,0.00000,1,CURRENT_TIMESTAMP,'BATTERY',0,1,'ORDER_ITEM',0,0.00000);

-- TODO need to create separate OFFER_ITEM_CRITERIAS per TEST! and agency??
--INSERT INTO BLC_OFFER_ITEM_CRITERIA (OFFER_ITEM_CRITERIA_ID,ORDER_ITEM_MATCH_RULE,QUANTITY) VALUES (1,'MVEL.eval("toUpperCase()",discreteOrderItem.name)==MVEL.eval("toUpperCase()","Battery Subscription")',1);
--INSERT INTO BLC_OFFER_ITEM_CRITERIA (OFFER_ITEM_CRITERIA_ID,ORDER_ITEM_MATCH_RULE,QUANTITY) VALUES (2,'discreteOrderItem.eligibleForBatteryInCart==true&&MVEL.eval("toUpperCase()",discreteOrderItem.orderItemType.type)==MVEL.eval("toUpperCase()","org.ets.ereg.domain.interfaces.model.order.TestDiscreteOrderItem")',1);

--INSERT INTO BLC_QUAL_CRIT_OFFER_XREF (OFFER_ID,OFFER_ITEM_CRITERIA_ID) VALUES (100,1);
--INSERT INTO BLC_TAR_CRIT_OFFER_XREF (OFFER_ID,OFFER_ITEM_CRITERIA_ID) VALUES (100,2);

------------------------------------------------------------------------------------------------------------------
-- Create Customer Battery Subscription Offer
-- ========================================================
------------------------------------------------------------------------------------------------------------------
-- TLDR; IF this customer has purchased a battery subscription in the past OR this customer has a battery in the cart
--  THEN apply the discount to those items that
--  are of type "TestDiscreteOrderItem" in Agency X and the order item is Eligible for the Battery that was purchased
INSERT INTO BLC_OFFER (OFFER_ID,APPLIES_WHEN_RULES,APPLIES_TO_RULES,APPLY_OFFER_TO_MARKED_ITEMS,APPLY_TO_SALE_PRICE,ARCHIVED,COMBINABLE_WITH_OTHER_OFFERS,OFFER_DELIVERY_TYPE,OFFER_DESCRIPTION,OFFER_DISCOUNT_TYPE,END_DATE,MARKETING_MESSASGE,MAX_USES_PER_CUSTOMER,MAX_USES,OFFER_NAME,OFFER_ITEM_QUALIFIER_RULE,OFFER_ITEM_TARGET_RULE,OFFER_PRIORITY,QUALIFYING_ITEM_MIN_TOTAL,STACKABLE,START_DATE,TARGET_SYSTEM,TOTALITARIAN_OFFER,USE_NEW_FORMAT,OFFER_TYPE,USES,OFFER_VALUE) VALUES (200,'customer.hasEligibleBatterySubscription==true',null,0,0,'N',1,'AUTOMATIC',null,'FIX_PRICE',to_date('01-JAN-2030','DD-MON-YYYY'),null,null,0,'Battery Subcription Purchased','NONE','NONE',0,0.00000,1,CURRENT_TIMESTAMP,'BATTERY',0,1,'ORDER_ITEM',0,0.00000);
INSERT INTO BLC_OFFER_RULE (OFFER_RULE_ID,MATCH_RULE) VALUES (1,'customer.hasEligibleBatterySubscription==true');
INSERT INTO BLC_OFFER_RULE_MAP (BLC_OFFER_OFFER_ID,OFFER_RULE_ID,MAP_KEY) VALUES (200,1,'CUSTOMER');

INSERT INTO BLC_OFFER_ITEM_CRITERIA (OFFER_ITEM_CRITERIA_ID,ORDER_ITEM_MATCH_RULE,QUANTITY) VALUES (1,'discreteOrderItem.eligibleForPurchasedBattery==true&&MVEL.eval("toUpperCase()",discreteOrderItem.orderItemType.type)==MVEL.eval("toUpperCase()","org.ets.ereg.domain.interfaces.model.order.TestDiscreteOrderItem")',1);
INSERT INTO BLC_TAR_CRIT_OFFER_XREF (OFFER_ID,OFFER_ITEM_CRITERIA_ID) VALUES (200,1);

INSERT INTO BLC_OFFER (OFFER_ID,APPLIES_WHEN_RULES,APPLIES_TO_RULES,APPLY_OFFER_TO_MARKED_ITEMS,APPLY_TO_SALE_PRICE,ARCHIVED,COMBINABLE_WITH_OTHER_OFFERS,OFFER_DELIVERY_TYPE,OFFER_DESCRIPTION,OFFER_DISCOUNT_TYPE,END_DATE,MARKETING_MESSASGE,MAX_USES_PER_CUSTOMER,MAX_USES,OFFER_NAME,OFFER_ITEM_QUALIFIER_RULE,OFFER_ITEM_TARGET_RULE,OFFER_PRIORITY,QUALIFYING_ITEM_MIN_TOTAL,STACKABLE,START_DATE,TARGET_SYSTEM,TOTALITARIAN_OFFER,USE_NEW_FORMAT,OFFER_TYPE,USES,OFFER_VALUE) VALUES (300,'customer.hasBatteryInCart==true',null,0,0,'N',1,'AUTOMATIC',null,'FIX_PRICE',to_date('01-JAN-2030','DD-MON-YYYY'),null,null,0,'Battery Subcription In Cart','NONE','NONE',0,0.00000,1,CURRENT_TIMESTAMP,'BATTERY',0,1,'ORDER_ITEM',0,0.00000);
INSERT INTO BLC_OFFER_RULE (OFFER_RULE_ID,MATCH_RULE) VALUES (2,'customer.hasBatteryInCart==true');
INSERT INTO BLC_OFFER_RULE_MAP (BLC_OFFER_OFFER_ID,OFFER_RULE_ID,MAP_KEY) VALUES (300,2,'CUSTOMER');

INSERT INTO BLC_OFFER_ITEM_CRITERIA (OFFER_ITEM_CRITERIA_ID,ORDER_ITEM_MATCH_RULE,QUANTITY) VALUES (2,'discreteOrderItem.eligibleForBatteryInCart==true&&MVEL.eval("toUpperCase()",discreteOrderItem.orderItemType.type)==MVEL.eval("toUpperCase()","org.ets.ereg.domain.interfaces.model.order.TestDiscreteOrderItem")',1);
INSERT INTO BLC_TAR_CRIT_OFFER_XREF (OFFER_ID,OFFER_ITEM_CRITERIA_ID) VALUES (300,2);

------------------------------------------------------------------------------------------------------------------
-- Create Price Lists for the individual tests for each Agency
-- ========================================================
-- This is a summary of the sample data:
-- Agency = "New Jersey"
--  ELA-Reading - $100
--  ELA-Writing - $100
--  Social Studies - $100
--  Science - $100
--  Mathematics - $100

-- Agency = "Nevada Prison System"
--  ELA-Reading - $50
--  ELA-Writing - $50
--  Social Studies - $50
--  Science - $50
--  Mathematics - $50

--------------------------------------------------------------------------------------------------------------------
INSERT INTO BLC_CURRENCY(CURRENCY_CODE, FRIENDLY_NAME, DEFAULT_FLAG) VALUES('USD', 'US Dollars', 1);
-- INSERT INTO BLC_PRICE_LIST (PRICE_LIST_ID,CURRENCY_CODE,FRIENDLY_NAME,PRICE_KEY) VALUES (1,'USD','New Jersey','NJ');
-- INSERT INTO BLC_PRICE_LIST (PRICE_LIST_ID,CURRENCY_CODE,FRIENDLY_NAME,PRICE_KEY) VALUES (2,'USD','Nevada Prison System','Nevada_Prison');
-- INSERT INTO BLC_PRICE_DATA(PRICE_DATA_ID,RETAIL_PRICE,SALE_PRICE) values(2001,100.00,100.00);
-- INSERT INTO BLC_PRICE_DATA(PRICE_DATA_ID,RETAIL_PRICE,SALE_PRICE) values(2002,50.00,50.00);
-- INSERT INTO BLC_SKU_PRICE_DATA(PRICE_DATA_ID,SKU_ID,MAP_KEY) VALUES (2001,1,'NJ');
-- INSERT INTO BLC_SKU_PRICE_DATA(PRICE_DATA_ID,SKU_ID,MAP_KEY) VALUES (2001,2,'NJ');
-- INSERT INTO BLC_SKU_PRICE_DATA(PRICE_DATA_ID,SKU_ID,MAP_KEY) VALUES (2001,3,'NJ');
-- INSERT INTO BLC_SKU_PRICE_DATA(PRICE_DATA_ID,SKU_ID,MAP_KEY) VALUES (2001,4,'NJ');
-- INSERT INTO BLC_SKU_PRICE_DATA(PRICE_DATA_ID,SKU_ID,MAP_KEY) VALUES (2001,5,'NJ');
-- INSERT INTO BLC_SKU_PRICE_DATA(PRICE_DATA_ID,SKU_ID,MAP_KEY) VALUES (2002,1,'Nevada_Prison');
-- INSERT INTO BLC_SKU_PRICE_DATA(PRICE_DATA_ID,SKU_ID,MAP_KEY) VALUES (2002,2,'Nevada_Prison');
-- INSERT INTO BLC_SKU_PRICE_DATA(PRICE_DATA_ID,SKU_ID,MAP_KEY) VALUES (2002,3,'Nevada_Prison');
-- INSERT INTO BLC_SKU_PRICE_DATA(PRICE_DATA_ID,SKU_ID,MAP_KEY) VALUES (2002,4,'Nevada_Prison');
-- INSERT INTO BLC_SKU_PRICE_DATA(PRICE_DATA_ID,SKU_ID,MAP_KEY) VALUES (2002,5,'Nevada_Prison');