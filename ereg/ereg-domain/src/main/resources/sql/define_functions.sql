create or replace FUNCTION greatCircleDistance(originLatitude IN DOUBLE PRECISION, originLongitude IN DOUBLE PRECISION, destinationLatitude IN DOUBLE PRECISION, destinationLongitude IN DOUBLE PRECISION) RETURN DOUBLE PRECISION DETERMINISTIC IS BEGIN RETURN acos(round(sin(originLatitude/57.2958279)*sin(destinationLatitude/57.2958279) +cos(originLatitude/57.2958279)*cos(destinationLatitude/57.2958279)*cos((destinationLongitude-originLongitude)/57.2958279), 15))*3959;     END greatCircleDistance;;
ALTER FUNCTION greatCircleDistance COMPILE;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------- GET THE CONFIGURATION FOR A GIVEN HIERARCHY ID AND RULE SET TYPE
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION Get_ActiveRulset_ConfigId(v_hier_id IN   EREG_HIER.ereg_hier_id%TYPE,v_rule_set_typ IN RUL_SET_TYP.RUL_SET_TYP_CDE%TYPE,v_admin_role_id IN EREG_HIER_RUL_SET_CNFGN.ADMIN_ROLE_ID%TYPE) RETURN RUL_SET_CNFGN.rul_set_cnfgn_id%TYPE IS v_ruleset_cnfgn_id  RUL_SET_CNFGN.rul_set_cnfgn_id%TYPE; BEGIN WITH cons AS ( SELECT * FROM ereg_hier_rul_set_cnfgn WHERE EREG_HIER_RUL_SET_CNFGN.ADMIN_ROLE_ID=v_admin_role_id )SELECT RUL_SET_CNFGN_ID into v_ruleset_cnfgn_id FROM( SELECT ehss.ereg_hier_id, ehss.RUL_SET_CNFGN_ID  RUL_SET_CNFGN_ID, hir.hier_lvl FROM ( SELECT hier_typ_cde, ereg_hier_id, parnt_ereg_hier_id, hier_lvl FROM ereg_hier START WITH ereg_hier_id =  v_hier_id CONNECT BY PRIOR parnt_ereg_hier_id =ereg_hier_id) hir, ereg_hier_rul_set_cnfgn ehss, rul_set_cnfgn rsc WHERE hir.ereg_hier_id = ehss.ereg_hier_id AND ehss.RUL_SET_CNFGN_ID =RSC.RUL_SET_CNFGN_ID AND RSC.RUL_SET_TYP_CDE = v_rule_set_typ AND nvl(ehss.admin_role_id,0)  =( CASE WHEN (v_admin_role_id != 0  AND (SELECT COUNT(1) FROM cons)!=0) THEN v_admin_role_id else 0 END ) ORDER BY hir.hier_lvl desc) WHERE rownum =1;  RETURN v_ruleset_cnfgn_id; EXCEPTION WHEN NO_DATA_FOUND THEN NULL; RETURN v_ruleset_cnfgn_id; END Get_ActiveRulset_ConfigId;;
ALTER FUNCTION Get_ActiveRulset_ConfigId COMPILE;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--- Get a Rule Paramter Val depending on Hierarchy Id, Rule Set Type Code, Rule Code, Rule Param Code
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE FUNCTION GET_RUL_PARM_VAL (i_ereg_hier_id EREG_HIER.EREG_HIER_ID%TYPE,i_rul_set_typ_cde    RUL_SET_TYP.RUL_SET_TYP_CDE%type,i_rul_cde RUL.RUL_CDE%TYPE,i_rul_param_cde RUL_PARM.RUL_PARM_CDE%TYPE) RETURN RUL_SET_CNFGN_PARM_VAL.RUL_PARM_VAL_TXT%TYPE IS v_rul_parm_val   RUL_SET_CNFGN_PARM_VAL.RUL_PARM_VAL_TXT%TYPE; BEGIN v_rul_parm_val := null; with cons as  (SELECT rul_parm_val_txt FROM rul_set_cnfgn_parm_val rscpa, rul_set_cnfgn_dtl rscd WHERE rscpa.rul_cde = i_rul_cde AND rscpa.RUL_PARM_CDE = i_rul_param_cde AND RSCD.RUL_SET_CNFGN_DTL_ID=RSCPA.RUL_SET_CNFGN_DTL_ID AND RSCD.RUL_CDE = RSCPA.RUL_CDE AND rscd.rul_set_cnfgn_id =(SELECT GET_ACTIVERULSET_CONFIGID (i_ereg_hier_id, i_rul_set_typ_cde,0) FROM DUAL)) SELECT CASE WHEN (select count(1) from cons) = 0 THEN (SELECT DFLT_VAL FROM rul_parm_dflt WHERE rul_cde = i_rul_cde AND rul_parm_cde = i_rul_param_cde AND rul_set_typ_cde = i_rul_set_typ_cde) ELSE (select rul_parm_val_txt from cons) END into v_rul_parm_val FROM dual; RETURN v_rul_parm_val;EXCEPTION WHEN NO_DATA_FOUND THEN return null; END GET_RUL_PARM_VAL;;
ALTER FUNCTION GET_RUL_PARM_VAL COMPILE;